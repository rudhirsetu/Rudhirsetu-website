import { useState, useEffect } from "react";
import PreloadLink from "../components/PreloadLink";
import {
  ArrowRight,
  Heart,
  Calendar,
  ExternalLink,
  Activity,
  Zap,
  Award,
  Image,
  Phone,
  Mail,
  MapPin,
} from "lucide-react";
import { motion } from "framer-motion";
import Hero from "../components/Hero";
import CountUp from "../components/CountUp";

import { Event, GalleryImage, ContactSettings } from "../types/sanity";
import { eventService, settingsService } from "../services/sanity-client";
import {
  FeaturedCarousel,
  ImageLightbox,
} from "../components/GalleryComponents";
import { client } from "../lib/sanity";
import { QUERIES } from "../lib/sanity";
import EventCard from "../components/EventCard";
import SpotlightCard from "../components/SpotlightCard";

const Home = () => {
  const [upcomingEvents, setUpcomingEvents] = useState<Event[]>([]);
  const [pastEvents, setPastEvents] = useState<Event[]>([]);
  const [featuredImages, setFeaturedImages] = useState<GalleryImage[]>([]);
  const [
    contactSettings,
    setContactSettings,
  ] = useState<ContactSettings | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [selectedImage, setSelectedImage] = useState<GalleryImage | null>(null);
  const [selectedImageIndex, setSelectedImageIndex] = useState<number>(0);
  const [isEventsVisible, setIsEventsVisible] = useState(false);

  useEffect(() => {
    const loadData = async () => {
      try {
        setLoading(true);
        setError(null);

        // Load each data source independently to avoid total failure
        const loadEvents = async () => {
          try {
            const [eventsData, pastData] = await Promise.all([
              eventService.fetchUpcoming(1, 2),
              eventService.fetchPast(1, 2),
            ]);

            if (eventsData && eventsData.data) {
              setUpcomingEvents(eventsData.data);
            } else {
              console.warn("Failed to load upcoming events");
            }

            if (pastData && pastData.data) {
              setPastEvents(pastData.data);
            } else {
              console.warn("Failed to load past events");
            }
          } catch (err) {
            console.error("Error loading events:", err);
            setError("Failed to load events. Please refresh the page.");
            // Still show events section even if there's an error
            setTimeout(() => {
              setIsEventsVisible(true);
            }, 200);
          }
        };

        const loadImages = async () => {
          try {
            const imagesData = await client.fetch(QUERIES.featuredImages);
            if (imagesData) {
              setFeaturedImages(imagesData || []);
            }
          } catch (err) {
            console.error("Error loading images:", err);
            // Images are less critical, don't show error for this
          }
        };

        const loadContact = async () => {
          try {
            const contactData = await settingsService.fetchContact();
            if (contactData) {
              setContactSettings(contactData);
            }
          } catch (err) {
            console.error("Error loading contact settings:", err);
            // Contact info is less critical, don't show error for this
          }
        };

        // Load events, images, and contact settings independently
        await Promise.allSettled([loadEvents(), loadImages(), loadContact()]);
      } catch (err) {
        console.error("Error loading data:", err);
        setError("Something went wrong. Please refresh the page.");
      } finally {
        setLoading(false);
        // Trigger events section animation after loading completes
        setTimeout(() => {
          setIsEventsVisible(true);
        }, 200);
      }
    };
    loadData();
  }, []);

  // Animation variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.15,
        delayChildren: 0.3,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { duration: 0.6 },
    },
  };

  const fadeInUpVariants = {
    hidden: { opacity: 0, y: 40 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { duration: 0.8 },
    },
  };

  const keyAreas = [
    {
      title: "Blood Donation",
      description:
        "Monthly camps and emergency support with blood centers & hospitals",
      extendedDescription:
        "Our primary mission focuses on organizing blood donation camps, providing emergency blood support.",
      stats: [
        { label: "Blood Donation Camps", value: "50+" },
        { label: "Emergency Support", value: "24/7" },
      ],
      icon: <Heart className="w-12 h-12 text-red-500" />,
      color: "bg-red-50",
      accentColor: "border-red-200",
      spotlightColor: "rgba(239, 68, 68, 0.2)",
      gridClass: "md:col-span-2 md:row-span-2",
    },
    {
      title: "Cancer Awareness",
      description:
        "Focus on cervical and breast cancer awareness with free testing camps",
      icon: <Award className="w-10 h-10 text-purple-500" />,
      color: "bg-purple-50",
      accentColor: "border-purple-200",
      spotlightColor: "rgba(168, 85, 247, 0.2)",
      gridClass: "md:col-span-2",
    },
    {
      title: "Thalassemia Support",
      description:
        "Free testing camps and comprehensive patient support for 68+ patients",
      icon: <Activity className="w-10 h-10 text-emerald-500" />,
      color: "bg-emerald-50",
      accentColor: "border-emerald-200",
      spotlightColor: "rgba(34, 197, 94, 0.2)",
      gridClass: "md:col-span-1",
    },
    {
      title: "Eye Care",
      description: "Free eye checkups, cataract screening & operations",
      icon: <Zap className="w-10 h-10 text-blue-500" />,
      color: "bg-blue-50",
      accentColor: "border-blue-200",
      spotlightColor: "rgba(59, 130, 246, 0.2)",
      gridClass: "md:col-span-1",
    },
  ];

  const impactStats = [
    {
      label: "Blood Donation Camps",
      value: 50,
      suffix: "+",
      subtext: "Annually",
      color: "from-red-500 to-red-600",
      duration: 1.5,
    },
    {
      label: "Emergencies Supported",
      value: 9800,
      suffix: "+",
      subtext: "And counting",
      color: "from-orange-500 to-red-500",
      duration: 0.1,
    },
    {
      label: "Eye Checkups",
      value: 15000,
      suffix: "+",
      subtext: "Completed",
      color: "from-emerald-500 to-emerald-600",
      duration: 0.1,
    },
    {
      label: "Cancer Awareness",
      value: 20000,
      suffix: "+",
      subtext: "Women reached",
      color: "from-indigo-500 to-indigo-600",
      duration: 0.1,
    },
  ];

  return (
    <div className="space-y-0 overflow-x-hidden bg-white">
      <Hero />

      {/* Key Focus Areas */}
      <motion.section
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, margin: "-100px" }}
        variants={containerVariants}
        className="mx-auto md:mx-16 px-4 sm:px-6 md:px-8 py-16 sm:py-20 md:py-24 lg:py-32 overflow-hidden"
      >
        <div className="relative z-10 ">
          <motion.div
            variants={itemVariants}
            className="flex flex-col items-center text-center max-w-4xl mx-auto mb-12 sm:mb-16 md:mb-20"
          >
            <h2 className="text-black font-bold text-3xl sm:text-4xl md:text-5xl lg:text-6xl tracking-tight mb-6 sm:mb-7 md:mb-8">
              Our Key Focus
            </h2>
            <p className="text-base sm:text-lg md:text-xl lg:text-xl text-gray-600 leading-relaxed max-w-xs sm:max-w-md md:max-w-2xl lg:max-w-3xl px-4 sm:px-0">
              We&apos;re dedicated to creating positive impact through these key
              initiatives
            </p>
          </motion.div>

          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-5 md:gap-6 lg:gap-8 auto-rows-fr">
            {keyAreas.map((area) => (
              <motion.div
                key={area.title}
                variants={itemVariants}
                className={`h-full ${area.gridClass}`}
              >
                <SpotlightCard
                  className={`h-full min-h-[240px] sm:min-h-[260px] md:min-h-[280px] ${
                    area.title === "Blood Donation"
                      ? "lg:min-h-[380px] xl:min-h-[400px] flex flex-col relative"
                      : area.title === "Cancer Awareness"
                      ? "flex flex-col relative"
                      : ""
                  }`}
                  spotlightColor={area.spotlightColor}
                >
                  <div className="mb-6">{area.icon}</div>

                  {area.title === "Blood Donation" ? (
                    <>
                      <div className="absolute hidden md:block top-60 right-4 scale-150 opacity-100 pointer-events-none">
                      <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg"  x="0px" y="0px"
	 width="100%" viewBox="0 0 1392 752" enableBackground="new 0 0 1392 752">
<path fill="transparent" opacity="1.000000" stroke="none" 
	d="
M1002.000000,753.000000 
	C668.038818,753.000000 334.577637,753.000000 1.058233,753.000000 
	C1.058233,502.401337 1.058233,251.802673 1.058233,1.102003 
	C464.877960,1.102003 928.755920,1.102003 1392.816895,1.102003 
	C1392.816895,251.666550 1392.816895,502.333282 1392.816895,753.000000 
	C1262.802368,753.000000 1132.651245,753.000000 1002.000000,753.000000 
M647.056213,527.531250 
	C647.360474,527.736633 647.664734,527.942017 648.247864,528.662964 
	C650.490479,529.076782 652.746155,529.886780 654.972778,529.813843 
	C658.510681,529.697937 659.726562,531.133972 659.594910,534.508789 
	C659.452332,538.163818 659.635742,541.830750 659.643188,545.492615 
	C659.657959,552.704407 660.643982,553.930603 667.957031,553.978699 
	C671.130981,553.999573 672.130127,555.176514 672.013611,558.060669 
	C671.825684,562.712708 671.584167,567.368469 671.601624,572.021729 
	C671.635254,581.009521 672.077576,583.280579 681.279541,582.822266 
	C682.243408,582.774292 683.225281,583.087341 685.051697,583.360352 
	C685.051697,599.302612 685.051697,615.231079 684.872986,631.492859 
	C684.911743,631.990295 684.950500,632.487732 684.835449,633.521179 
	C684.835938,633.891785 684.836426,634.262329 684.350647,635.189209 
	C683.751648,637.254272 683.236389,639.348022 682.540649,641.379944 
	C676.359619,659.431213 656.500916,663.544495 644.284851,648.921204 
	C640.828430,644.783691 639.260254,639.068726 636.860474,633.228760 
	C636.782349,614.210632 636.704224,595.192566 636.868408,575.636108 
	C636.189636,573.206665 635.510864,570.777161 634.319275,567.807861 
	C626.835938,565.173584 624.758179,565.729309 620.905396,571.634766 
	C620.933289,572.083984 620.961243,572.533264 620.848267,573.913086 
	C620.904602,594.594910 620.960938,615.276733 620.985596,636.580566 
	C621.691528,639.649292 622.251221,642.760498 623.126892,645.779968 
	C629.306885,667.090637 653.726135,679.661621 673.922852,671.984253 
	C673.922852,671.984253 674.005493,671.901306 674.571045,671.912292 
	C675.068115,671.665894 675.565247,671.419434 676.792847,671.096741 
	C690.981262,666.218079 701.421326,648.629333 701.664185,634.054077 
	C701.919434,618.733337 701.811646,603.405334 701.741455,588.081116 
	C701.725098,584.512756 702.442383,582.354004 706.731750,582.752747 
	C711.831970,583.226929 713.333618,579.926941 713.398438,575.507263 
	C713.474243,570.344421 713.731445,565.178406 713.612976,560.020630 
	C713.525452,556.214050 714.505676,554.149597 718.863708,554.201965 
	C723.494446,554.257690 725.647095,551.248596 725.865051,546.807007 
	C725.962891,544.812439 725.908081,542.809998 725.911682,540.811157 
	C725.929504,530.870239 725.928162,530.870239 735.521545,529.174500 
	C735.992371,528.792297 736.463196,528.410034 737.537720,527.651733 
	C738.586609,525.324280 740.280212,523.066956 740.542358,520.654053 
	C741.006531,516.381958 740.600464,512.015320 741.359985,507.303741 
	C747.991821,507.147064 754.636108,506.657837 761.252930,506.904266 
	C774.254150,507.388489 786.658325,504.732391 798.619202,500.074493 
	C822.314392,490.847015 839.996399,474.467804 852.496887,452.606384 
	C858.608093,441.918854 863.004822,430.419952 863.315308,417.173340 
	C863.721130,414.072540 864.474487,410.972412 864.480774,407.870819 
	C864.581970,357.883240 864.660767,307.895355 864.579102,257.907837 
	C864.547791,238.759857 864.100769,219.612549 863.669067,199.603455 
	C861.145020,190.999481 858.620911,182.395508 856.083313,173.400955 
	C856.083313,173.400955 856.021545,173.015015 856.159363,172.578781 
	C853.083069,166.869843 850.546936,160.780243 846.838257,155.516876 
	C829.460632,130.854156 805.592224,116.293564 775.210571,110.872375 
	C770.921509,110.484894 766.636353,109.824257 762.342590,109.762306 
	C750.517395,109.591698 738.688721,109.665947 726.861389,109.654999 
	C719.846802,109.648499 719.883667,109.657921 719.790222,102.869339 
	C719.751343,100.043404 719.729614,97.190521 719.339172,94.400383 
	C716.292725,72.626602 689.649109,61.884422 672.093262,75.108231 
	C662.511292,82.325768 659.673218,91.941780 660.765686,103.238647 
	C661.228149,108.021553 659.265747,109.834793 654.529114,109.754997 
	C644.370605,109.583855 634.204224,109.877327 624.045959,109.700989 
	C597.924133,109.247551 574.744141,117.080223 554.301697,133.442581 
	C528.918762,153.759354 515.651794,180.159958 515.441833,212.494308 
	C515.029602,275.959778 515.222656,339.429657 515.338074,402.897400 
	C515.350647,409.824341 516.495667,416.749268 517.393250,424.468109 
	C525.771301,465.532990 562.472961,503.126556 609.930359,506.675201 
	C621.326477,506.792236 632.722534,506.909302 644.065063,507.952667 
	C644.360962,513.625122 644.656860,519.297607 644.935852,525.047302 
	C644.935852,525.047302 645.013062,525.064392 645.170532,525.641785 
	C645.746582,526.181702 646.322693,526.721619 647.028809,527.127625 
	C647.028809,527.127625 646.894958,526.997437 647.056213,527.531250 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M517.115356,423.675110 
	C516.495667,416.749268 515.350647,409.824341 515.338074,402.897400 
	C515.222656,339.429657 515.029602,275.959778 515.441833,212.494308 
	C515.651794,180.159958 528.918762,153.759354 554.301697,133.442581 
	C574.744141,117.080223 597.924133,109.247551 624.045959,109.700989 
	C634.204224,109.877327 644.370605,109.583855 654.529114,109.754997 
	C659.265747,109.834793 661.228149,108.021553 660.765686,103.238647 
	C659.673218,91.941780 662.511292,82.325768 672.093262,75.108231 
	C689.649109,61.884422 716.292725,72.626602 719.339172,94.400383 
	C719.729614,97.190521 719.751343,100.043404 719.790222,102.869339 
	C719.883667,109.657921 719.846802,109.648499 726.861389,109.654999 
	C738.688721,109.665947 750.517395,109.591698 762.342590,109.762306 
	C766.636353,109.824257 770.921509,110.484894 775.227173,111.119316 
	C770.247864,112.552185 765.305786,114.181946 760.240540,114.796593 
	C755.379089,115.386490 750.389954,114.924034 745.456970,114.924034 
	C745.397522,115.791153 745.338135,116.658272 745.278687,117.525391 
	C748.012329,118.018127 750.728943,118.773430 753.482971,118.951729 
	C760.282593,119.391945 766.733765,120.417320 770.554810,126.576981 
	C751.257507,126.496086 732.429810,126.422516 713.602783,126.270752 
	C706.492737,126.213440 703.918213,123.348610 703.630066,116.359055 
	C703.338074,109.274857 703.276733,102.072342 701.874939,95.173500 
	C700.490906,88.361794 694.880188,85.326401 687.855469,85.988243 
	C682.199768,86.521103 677.619568,91.384758 677.141724,97.980515 
	C676.769470,103.120285 676.933960,108.300758 676.907959,113.463387 
	C676.858887,123.214851 674.066101,126.254471 664.181519,126.361015 
	C648.355408,126.531601 632.526123,126.384369 616.698914,126.485283 
	C613.057434,126.508499 609.318176,126.546814 605.795959,127.340935 
	C588.290039,131.287750 572.383484,138.477463 559.428589,151.286057 
	C542.872559,167.655090 533.200623,187.132019 533.068359,210.744568 
	C532.947021,232.404282 533.050720,254.065262 533.055176,275.725677 
	C533.055542,277.497894 533.055176,279.270111 533.055176,281.706512 
	C537.026062,280.675659 540.137573,279.546478 543.342590,279.119568 
	C547.109314,278.617828 548.289062,276.859528 548.226318,273.149261 
	C548.015198,260.659973 548.097595,248.165665 548.077820,235.673264 
	C548.075195,234.007721 547.553467,232.003891 548.287598,230.752426 
	C549.518372,228.654297 551.428101,225.720200 553.302856,225.523117 
	C556.119324,225.227051 558.401611,227.594696 558.224976,231.124161 
	C558.150146,232.619522 558.215881,234.121719 558.210449,235.620789 
	C558.162781,248.770493 558.113403,261.920197 558.161377,275.202637 
	C558.832092,275.355713 559.405823,275.376099 560.305176,275.184631 
	C561.130981,274.850586 561.631226,274.728394 562.105713,274.911346 
	C562.696533,279.144043 563.313110,283.071625 563.548218,287.185974 
	C559.100830,287.776123 557.822205,289.883484 557.859131,294.042542 
	C558.080872,319.039337 558.012939,344.038818 558.021912,369.037384 
	C558.023682,373.947174 556.145020,375.523010 551.731262,374.656860 
	C547.736206,373.872894 548.174561,370.748627 548.165649,368.003265 
	C548.089783,344.671478 548.083679,321.339508 548.057190,298.007568 
	C548.054993,296.072540 548.056946,294.137482 548.056946,290.943665 
	C542.396118,292.916412 537.767822,294.529327 532.987793,296.512207 
	C532.556091,299.171173 532.037659,301.459656 532.032532,303.749298 
	C531.974121,329.946991 531.958374,356.144989 532.048218,382.342529 
	C532.057129,384.936859 532.838562,387.528534 533.542542,390.309082 
	C536.603638,391.622894 539.383667,392.749054 541.813416,393.997864 
	C540.272034,395.747559 538.536438,397.232330 538.062622,399.046661 
	C537.685547,400.490234 538.849915,402.336334 539.330017,404.003723 
	C540.188416,402.596252 541.422791,401.283875 541.809021,399.756958 
	C542.283386,397.882141 542.049255,395.828064 542.418213,393.825134 
	C546.142700,394.891876 549.570251,395.984955 552.957825,397.455353 
	C552.438660,402.629608 549.914307,406.129730 545.624146,408.806641 
	C541.615845,407.628906 537.980469,406.391144 532.554810,404.543854 
	C533.613708,413.441223 533.201782,421.369507 535.668945,428.268097 
	C540.367737,441.406555 547.847473,453.270416 556.553711,464.088165 
	C546.380188,467.074951 542.921753,465.055664 540.626160,454.926086 
	C539.670471,450.708710 539.030762,446.417511 537.999939,442.220642 
	C537.680054,440.918274 536.811829,439.173706 535.739929,438.730011 
	C530.332642,436.491669 527.932800,431.730225 525.302307,427.115173 
	C523.462158,423.886688 521.683289,420.623291 519.209106,416.174500 
	C518.240112,419.645844 517.677734,421.660461 517.115356,423.675110 
M746.277527,124.862610 
	C746.583862,124.821686 746.890259,124.780762 747.196594,124.739845 
	C747.105896,124.545532 747.015259,124.351219 746.924622,124.156914 
	C746.622864,124.375511 746.321106,124.594116 746.277527,124.862610 
M517.824402,410.511475 
	C517.937195,410.476868 518.050049,410.442261 518.162842,410.407654 
	C518.063049,410.405884 517.963196,410.404114 517.824402,410.511475 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M545.997070,408.746582 
	C549.914307,406.129730 552.438660,402.629608 553.242065,397.497437 
	C554.053650,397.466064 554.541016,397.769897 555.331299,398.185730 
	C556.465820,398.514648 557.297607,398.731598 558.541748,398.946686 
	C564.588379,400.139130 570.195312,401.485931 575.861755,402.500336 
	C596.176941,406.137177 615.542236,402.277924 634.201904,394.359497 
	C648.747681,388.186798 663.267090,381.907776 679.035217,379.779999 
	C701.949280,376.687988 723.955811,380.089417 745.205994,389.476013 
	C753.926453,393.328003 763.153198,396.331665 772.428162,398.563934 
	C788.177490,402.354462 804.123596,401.785248 819.889587,398.092377 
	C827.779358,396.244324 835.583984,394.033020 843.696289,391.849884 
	C844.318420,391.522278 844.671265,391.330780 845.185547,391.015320 
	C845.346863,390.891388 845.714905,390.717621 845.734985,390.666260 
	C845.755066,390.614868 845.908325,390.451569 845.926025,390.330322 
	C845.943787,390.209076 846.097168,390.017914 846.152344,389.830750 
	C846.229065,389.132416 846.250732,388.621185 846.223633,387.637482 
	C846.221924,381.747925 846.268982,376.330902 846.443420,370.757538 
	C846.738037,370.388641 846.899841,370.172058 847.346802,370.150848 
	C848.348938,372.593384 849.283447,374.795502 849.705872,377.091858 
	C850.088318,379.170746 849.229980,381.695007 850.100952,383.429138 
	C853.760803,390.716309 853.835754,398.443573 853.369446,406.205017 
	C853.259521,408.036346 851.449463,409.746918 850.493896,411.551453 
	C849.591003,413.256592 847.645813,415.692047 848.185608,416.595245 
	C849.126404,418.169739 851.931763,419.988525 853.405029,419.602661 
	C856.440002,418.807800 859.112000,416.627228 862.018433,415.293274 
	C862.368713,416.290649 862.633911,417.011536 862.899170,417.732391 
	C863.004822,430.419952 858.608093,441.918854 852.496887,452.606384 
	C839.996399,474.467804 822.314392,490.847015 798.619202,500.074493 
	C786.658325,504.732391 774.254150,507.388489 761.252930,506.904266 
	C754.636108,506.657837 747.991821,507.147064 740.851074,507.193115 
	C738.731140,505.380310 737.235229,503.546387 735.478638,502.010681 
	C733.467896,500.252747 730.948181,499.017700 729.152527,497.087585 
	C726.796204,494.554810 725.175598,494.384399 722.604736,496.934113 
	C720.893616,498.631165 718.238525,500.227295 715.955444,500.300781 
	C712.381653,500.415802 708.743225,499.301819 705.180664,498.494293 
	C704.148438,498.260254 702.517761,497.356384 702.460510,496.653717 
	C701.999939,491.001831 697.880981,492.050385 694.376343,492.013794 
	C689.719849,491.965149 685.001343,491.555725 680.426208,492.170471 
	C677.207092,492.602997 674.204285,494.542542 671.064392,495.699188 
	C668.337646,496.703613 665.578796,497.638947 662.788208,498.446411 
	C660.293579,499.168304 657.762085,499.884430 655.197327,500.198792 
	C653.548401,500.400879 651.809875,499.871582 650.111511,499.670074 
	C651.264832,498.516144 652.239136,497.028107 653.615662,496.290649 
	C655.438110,495.314270 657.575073,494.925018 660.923584,493.851715 
	C658.733032,492.783997 658.171631,492.274078 657.606506,492.269806 
	C646.801453,492.187531 635.993958,492.067352 625.193542,492.282684 
	C624.131897,492.303802 623.052002,494.411865 622.089172,495.636658 
	C620.827393,497.241791 619.997253,499.494843 618.380737,500.423981 
	C616.822205,501.319763 614.500977,500.991211 612.512634,501.014862 
	C608.396606,501.063782 606.898193,502.652222 608.996826,506.574738 
	C562.472961,503.126556 525.771301,465.532990 517.254333,424.071594 
	C517.677734,421.660461 518.240112,419.645844 519.209106,416.174500 
	C521.683289,420.623291 523.462158,423.886688 525.302307,427.115173 
	C527.932800,431.730225 530.332642,436.491669 535.739929,438.730011 
	C536.811829,439.173706 537.680054,440.918274 537.999939,442.220642 
	C539.030762,446.417511 539.670471,450.708710 540.626160,454.926086 
	C542.921753,465.055664 546.380188,467.074951 556.846130,464.256592 
	C560.223145,466.772919 562.830811,469.348083 565.688721,471.606598 
	C580.075378,482.976044 596.377686,489.533722 615.214478,490.862885 
	C653.178528,490.920410 690.656372,490.976501 728.134155,490.946625 
	C742.452454,490.935211 756.770630,490.726929 771.512695,490.591125 
	C772.905701,490.341888 773.867615,490.071869 774.845154,489.883331 
	C806.630005,483.753265 828.102173,464.940399 840.733459,435.678497 
	C844.816467,426.219666 846.663635,416.120483 845.916809,405.306335 
	C844.220398,405.631378 843.089417,405.754852 842.013550,406.068024 
	C821.142029,412.143616 800.117676,416.468262 778.178345,412.926605 
	C765.683594,410.909546 753.308167,408.384338 741.948792,402.716003 
	C729.557434,396.532715 716.463440,392.938690 702.843567,392.064636 
	C684.196594,390.867981 666.243347,394.010956 649.142151,402.298309 
	C631.046387,411.067627 612.002502,416.174530 591.528381,416.036133 
	C575.863525,415.930237 560.947937,412.568146 545.997070,408.746582 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M609.463623,506.624969 
	C606.898193,502.652222 608.396606,501.063782 612.512634,501.014862 
	C614.500977,500.991211 616.822205,501.319763 618.380737,500.423981 
	C619.997253,499.494843 620.827393,497.241791 622.089172,495.636658 
	C623.052002,494.411865 624.131897,492.303802 625.193542,492.282684 
	C635.993958,492.067352 646.801453,492.187531 657.606506,492.269806 
	C658.171631,492.274078 658.733032,492.783997 660.923584,493.851715 
	C657.575073,494.925018 655.438110,495.314270 653.615662,496.290649 
	C652.239136,497.028107 651.264832,498.516144 650.111511,499.670074 
	C651.809875,499.871582 653.548401,500.400879 655.197327,500.198792 
	C657.762085,499.884430 660.293579,499.168304 662.788208,498.446411 
	C665.578796,497.638947 668.337646,496.703613 671.064392,495.699188 
	C674.204285,494.542542 677.207092,492.602997 680.426208,492.170471 
	C685.001343,491.555725 689.719849,491.965149 694.376343,492.013794 
	C697.880981,492.050385 701.999939,491.001831 702.460510,496.653717 
	C702.517761,497.356384 704.148438,498.260254 705.180664,498.494293 
	C708.743225,499.301819 712.381653,500.415802 715.955444,500.300781 
	C718.238525,500.227295 720.893616,498.631165 722.604736,496.934113 
	C725.175598,494.384399 726.796204,494.554810 729.152527,497.087585 
	C730.948181,499.017700 733.467896,500.252747 735.478638,502.010681 
	C737.235229,503.546387 738.731140,505.380310 740.450378,507.385345 
	C740.600464,512.015320 741.006531,516.381958 740.542358,520.654053 
	C740.280212,523.066956 738.586609,525.324280 737.032715,527.925537 
	C736.036743,528.521484 735.545715,528.843689 735.054688,529.165833 
	C725.928162,530.870239 725.929504,530.870239 725.911682,540.811157 
	C725.908081,542.809998 725.962891,544.812439 725.865051,546.807007 
	C725.647095,551.248596 723.494446,554.257690 718.863708,554.201965 
	C714.505676,554.149597 713.525452,556.214050 713.612976,560.020630 
	C713.731445,565.178406 713.474243,570.344421 713.398438,575.507263 
	C713.333618,579.926941 711.831970,583.226929 706.731750,582.752747 
	C702.442383,582.354004 701.725098,584.512756 701.741455,588.081116 
	C701.811646,603.405334 701.919434,618.733337 701.664185,634.054077 
	C701.421326,648.629333 690.981262,666.218079 676.236084,671.098877 
	C675.121399,671.367859 674.563416,671.634583 674.005493,671.901306 
	C674.005493,671.901306 673.922852,671.984253 673.607117,671.825684 
	C669.450317,667.694092 673.562561,666.679993 675.830505,665.291687 
	C682.843201,660.998840 688.376526,655.472900 688.278687,646.813660 
	C688.232727,642.740967 686.050903,638.692444 684.836914,634.632935 
	C684.836426,634.262329 684.835938,633.891785 684.935547,632.950073 
	C685.041016,631.972534 685.046387,631.566040 685.051697,631.159546 
	C685.051697,615.231079 685.051697,599.302612 685.051697,583.360352 
	C683.225281,583.087341 682.243408,582.774292 681.279541,582.822266 
	C672.077576,583.280579 671.635254,581.009521 671.601624,572.021729 
	C671.584167,567.368469 671.825684,562.712708 672.013611,558.060669 
	C672.130127,555.176514 671.130981,553.999573 667.957031,553.978699 
	C660.643982,553.930603 659.657959,552.704407 659.643188,545.492615 
	C659.635742,541.830750 659.452332,538.163818 659.594910,534.508789 
	C659.726562,531.133972 658.510681,529.697937 654.972778,529.813843 
	C652.746155,529.886780 650.490479,529.076782 647.934204,528.208496 
	C647.378662,527.501770 647.136841,527.249573 646.894958,526.997437 
	C646.894958,526.997437 647.028809,527.127625 646.812561,526.940247 
	C646.068604,526.190002 645.540833,525.627197 645.013062,525.064392 
	C645.013062,525.064392 644.935852,525.047302 644.955688,524.544922 
	C644.689880,518.370422 644.404297,512.698364 644.118652,507.026367 
	C632.722534,506.909302 621.326477,506.792236 609.463623,506.624969 
M708.885193,516.072449 
	C713.569214,515.742737 718.253235,515.412964 723.388794,514.975098 
	C723.388794,514.975098 723.848328,514.908691 724.386902,514.937988 
	C727.447632,513.165527 727.382202,512.414246 723.796326,509.263062 
	C723.895264,505.727905 721.204956,506.149139 718.751831,505.643677 
	C718.167542,505.725342 717.583252,505.807007 716.068298,506.009003 
	C702.366394,505.973358 688.664551,505.937744 674.581604,505.813660 
	C674.066040,505.843689 673.550537,505.873718 672.125854,506.028168 
	C668.368469,506.371155 664.611084,506.714142 660.654358,507.649811 
	C660.699646,509.075348 660.744934,510.500916 660.906555,512.593506 
	C660.955200,513.268677 661.003784,513.943909 661.791260,514.995911 
	C667.877197,515.367432 673.963196,515.738953 680.609741,516.579407 
	C687.419678,517.165894 694.221924,517.982117 701.043884,518.209717 
	C703.319092,518.285645 705.644470,516.854980 708.885193,516.072449 
M708.367249,530.305969 
	C698.454529,530.101562 688.539185,529.757751 678.633606,529.939941 
	C677.780273,529.955627 676.366577,533.465332 676.396179,535.333191 
	C676.415222,536.537048 678.550049,538.670959 679.816223,538.731689 
	C686.952637,539.074463 694.113281,538.898865 701.265564,538.931763 
	C709.227112,538.968323 709.227051,538.983093 708.367249,530.305969 
M689.904480,554.380859 
	C686.912720,555.694641 684.761536,564.901978 687.461243,565.857849 
	C690.493225,566.931458 695.220215,566.795166 697.552429,565.014526 
	C699.115784,563.820923 698.374817,558.668884 697.444336,555.666321 
	C697.124512,554.634216 693.107117,554.747986 689.904480,554.380859 
M685.385071,662.772339 
	C685.487854,662.555847 685.590698,662.339355 685.693542,662.122864 
	C685.559814,662.084106 685.426025,662.045349 685.292297,662.006592 
	C685.257141,662.242432 685.221924,662.478210 685.385071,662.772339 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M861.933350,415.016846 
	C859.112000,416.627228 856.440002,418.807800 853.405029,419.602661 
	C851.931763,419.988525 849.126404,418.169739 848.185608,416.595245 
	C847.645813,415.692047 849.591003,413.256592 850.493896,411.551453 
	C851.449463,409.746918 853.259521,408.036346 853.369446,406.205017 
	C853.835754,398.443573 853.760803,390.716309 850.100952,383.429138 
	C849.229980,381.695007 850.088318,379.170746 849.705872,377.091858 
	C849.283447,374.795502 848.348938,372.593384 847.229858,369.999268 
	C846.666443,369.445618 846.500671,369.251495 846.260254,368.672089 
	C846.244080,367.483643 846.292542,366.689056 846.405884,365.666962 
	C846.428589,364.664276 846.386414,363.889160 846.281250,362.712097 
	C846.257935,361.500458 846.297485,360.690765 846.417114,359.617615 
	C846.443298,358.271118 846.389465,357.188019 846.278320,355.741089 
	C846.249390,354.888031 846.277771,354.398895 846.412354,353.521332 
	C846.454102,345.799469 846.389465,338.465973 846.260132,330.690735 
	C846.248291,328.173492 846.301086,326.098053 846.530334,323.951263 
	C846.591858,323.245575 846.476868,322.611237 846.306519,321.512299 
	C846.220886,319.800537 846.190552,318.553375 846.138184,317.088928 
	C846.080383,316.582642 846.044189,316.293732 846.109985,315.694489 
	C847.630493,312.968903 849.334351,310.668396 850.364990,308.097961 
	C851.044983,306.402008 851.193604,304.223022 850.804443,302.428528 
	C850.139099,299.360901 848.310364,296.489105 847.957336,293.421478 
	C847.104553,286.012939 846.821594,278.538879 846.247192,270.684875 
	C846.226257,269.186218 846.267090,268.093964 846.514465,266.748108 
	C847.142212,265.000336 847.563354,263.506104 848.074219,261.618164 
	C847.811218,257.820679 847.458557,254.416931 847.099792,250.553619 
	C846.834473,242.430099 846.575317,234.766144 846.260010,226.757019 
	C846.232910,225.948013 846.261902,225.484161 846.397034,224.656815 
	C847.673828,221.242020 848.560425,218.040649 850.076355,215.171860 
	C852.904541,209.819595 853.084045,196.368973 850.060547,192.512726 
	C844.882141,185.908020 848.109009,175.353210 856.021545,173.015015 
	C856.021545,173.015015 856.083313,173.400955 856.005432,173.972504 
	C856.268677,177.266251 856.550049,179.997681 856.969360,182.707779 
	C857.315063,184.942230 858.713623,187.446136 858.093750,189.316391 
	C856.243652,194.899078 858.670776,198.208771 862.929688,201.473175 
	C862.601624,272.966614 862.267456,343.991730 861.933350,415.016846 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M856.090454,172.796906 
	C848.109009,175.353210 844.882141,185.908020 850.060547,192.512726 
	C853.084045,196.368973 852.904541,209.819595 850.076355,215.171860 
	C848.560425,218.040649 847.673828,221.242020 846.313965,224.193024 
	C845.998657,216.449692 846.555359,208.722610 845.627136,201.178238 
	C841.810120,170.153473 824.304321,148.908875 796.725403,135.666916 
	C788.578125,131.755066 779.614380,129.543808 771.024780,126.553200 
	C766.733765,120.417320 760.282593,119.391945 753.482971,118.951729 
	C750.728943,118.773430 748.012329,118.018127 745.278687,117.525391 
	C745.338135,116.658272 745.397522,115.791153 745.456970,114.924034 
	C750.389954,114.924034 755.379089,115.386490 760.240540,114.796593 
	C765.305786,114.181946 770.247864,112.552185 775.588867,111.236008 
	C805.592224,116.293564 829.460632,130.854156 846.838257,155.516876 
	C850.546936,160.780243 853.083069,166.869843 856.090454,172.796906 
M848.916016,167.142120 
	C849.274902,167.245239 849.633850,167.348373 849.992737,167.451492 
	C849.980103,167.165848 849.967407,166.880219 849.954773,166.594574 
	C849.603271,166.680893 849.251831,166.767197 848.916016,167.142120 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M684.593750,634.911072 
	C686.050903,638.692444 688.232727,642.740967 688.278687,646.813660 
	C688.376526,655.472900 682.843201,660.998840 675.830505,665.291687 
	C673.562561,666.679993 669.450317,667.694092 673.555298,671.798462 
	C653.726135,679.661621 629.306885,667.090637 623.126892,645.779968 
	C622.251221,642.760498 621.691528,639.649292 621.129639,635.894165 
	C621.802429,631.935547 622.331116,628.663269 622.859802,625.391052 
	C623.495361,625.195435 624.130859,624.999756 624.766357,624.804077 
	C626.603943,627.714111 628.423950,630.635376 630.286560,633.529358 
	C631.212402,634.967957 632.216553,636.356201 633.185242,637.767273 
	C634.398865,636.537292 635.612427,635.307251 636.826050,634.077271 
	C639.260254,639.068726 640.828430,644.783691 644.284851,648.921204 
	C656.500916,663.544495 676.359619,659.431213 682.540649,641.379944 
	C683.236389,639.348022 683.751648,637.254272 684.593750,634.911072 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M636.843262,633.653015 
	C635.612427,635.307251 634.398865,636.537292 633.185242,637.767273 
	C632.216553,636.356201 631.212402,634.967957 630.286560,633.529358 
	C628.423950,630.635376 626.603943,627.714111 624.766357,624.804077 
	C624.130859,624.999756 623.495361,625.195435 622.859802,625.391052 
	C622.331116,628.663269 621.802429,631.935547 621.145508,635.583130 
	C620.960938,615.276733 620.904602,594.594910 620.951538,573.176270 
	C621.068481,572.074585 621.082153,571.709778 621.095886,571.344971 
	C624.758179,565.729309 626.835938,565.173584 634.417114,568.316895 
	C633.006775,571.910950 634.087769,574.252075 636.626099,576.174438 
	C636.704224,595.192566 636.782349,614.210632 636.843262,633.653015 
z"/>
<path fill="#813E3A" opacity="1.000000" stroke="none" 
	d="
M862.018433,415.293304 
	C862.267456,343.991730 862.601624,272.966614 863.084595,201.384705 
	C863.438477,200.709854 863.641724,200.588867 863.843262,200.464935 
	C864.100769,219.612549 864.547791,238.759857 864.579102,257.907837 
	C864.660767,307.895355 864.581970,357.883240 864.480774,407.870819 
	C864.474487,410.972412 863.721130,414.072540 863.107239,417.452881 
	C862.633911,417.011536 862.368713,416.290649 862.018433,415.293304 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M863.756165,200.034195 
	C863.641724,200.588867 863.438477,200.709854 863.078491,200.916382 
	C858.670776,198.208771 856.243652,194.899078 858.093750,189.316391 
	C858.713623,187.446136 857.315063,184.942230 856.969360,182.707779 
	C856.550049,179.997681 856.268677,177.266251 856.012207,174.167816 
	C858.620911,182.395508 861.145020,190.999481 863.756165,200.034195 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M636.747314,575.905273 
	C634.087769,574.252075 633.006775,571.910950 634.673584,568.586853 
	C635.510864,570.777161 636.189636,573.206665 636.747314,575.905273 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M644.091858,507.489502 
	C644.404297,512.698364 644.689880,518.370422 644.964111,524.506287 
	C644.656860,519.297607 644.360962,513.625122 644.091858,507.489502 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M674.288269,671.906799 
	C674.563416,671.634583 675.121399,671.367859 675.870850,671.137085 
	C675.565247,671.419434 675.068115,671.665894 674.288269,671.906799 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M645.091797,525.353088 
	C645.540833,525.627197 646.068604,526.190002 646.747559,527.007202 
	C646.322693,526.721619 645.746582,526.181702 645.091797,525.353088 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M735.288086,529.170166 
	C735.545715,528.843689 736.036743,528.521484 736.730835,528.113525 
	C736.463196,528.410034 735.992371,528.792297 735.288086,529.170166 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M621.000610,571.489868 
	C621.082153,571.709778 621.068481,572.074585 621.021973,572.710938 
	C620.961243,572.533264 620.933289,572.083984 621.000610,571.489868 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M684.962341,631.326172 
	C685.046387,631.566040 685.041016,631.972534 685.012512,632.682129 
	C684.950500,632.487732 684.911743,631.990295 684.962341,631.326172 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M646.975586,527.264343 
	C647.136841,527.249573 647.378662,527.501770 647.794739,527.950684 
	C647.664734,527.942017 647.360474,527.736633 646.975586,527.264343 
z"/>
<path fill="white" opacity="1.000000" stroke="none" 
	d="
M770.554810,126.576981 
	C779.614380,129.543808 788.578125,131.755066 796.725403,135.666916 
	C824.304321,148.908875 841.810120,170.153473 845.627136,201.178238 
	C846.555359,208.722610 845.998657,216.449692 846.207764,224.556549 
	C846.261902,225.484161 846.232910,225.948013 846.182007,227.211121 
	C846.195251,237.974701 846.230469,247.939011 846.219116,258.266479 
	C846.209839,259.114868 846.247192,259.600067 846.211731,260.512024 
	C846.195190,262.959717 846.251587,264.980682 846.307922,267.001678 
	C846.267090,268.093964 846.226257,269.186218 846.171021,271.140442 
	C846.109741,279.472198 846.140442,286.943726 845.978516,294.411072 
	C845.911682,297.491669 845.430969,300.563263 844.709412,303.677216 
	C842.025574,304.293640 839.772339,304.877625 837.515869,305.449005 
	C821.439575,309.519836 805.152710,311.411804 788.599915,309.643066 
	C767.834778,307.424286 748.110901,300.863556 728.415588,294.435394 
	C703.380859,286.264648 678.529480,277.850769 652.351685,273.513336 
	C622.075134,268.496765 592.143127,269.193573 562.131409,274.606201 
	C561.631226,274.728394 561.130981,274.850586 559.977417,275.181122 
	C558.904236,275.282928 558.484436,275.176422 558.064575,275.069916 
	C558.113403,261.920197 558.162781,248.770493 558.210449,235.620789 
	C558.215881,234.121719 558.150146,232.619522 558.224976,231.124161 
	C558.401611,227.594696 556.119324,225.227051 553.302856,225.523117 
	C551.428101,225.720200 549.518372,228.654297 548.287598,230.752426 
	C547.553467,232.003891 548.075195,234.007721 548.077820,235.673264 
	C548.097595,248.165665 548.015198,260.659973 548.226318,273.149261 
	C548.289062,276.859528 547.109314,278.617828 543.342590,279.119568 
	C540.137573,279.546478 537.026062,280.675659 533.055176,281.706512 
	C533.055176,279.270111 533.055542,277.497894 533.055176,275.725677 
	C533.050720,254.065262 532.947021,232.404282 533.068359,210.744568 
	C533.200623,187.132019 542.872559,167.655090 559.428589,151.286057 
	C572.383484,138.477463 588.290039,131.287750 605.795959,127.340935 
	C609.318176,126.546814 613.057434,126.508499 616.698914,126.485283 
	C632.526123,126.384369 648.355408,126.531601 664.181519,126.361015 
	C674.066101,126.254471 676.858887,123.214851 676.907959,113.463387 
	C676.933960,108.300758 676.769470,103.120285 677.141724,97.980515 
	C677.619568,91.384758 682.199768,86.521103 687.855469,85.988243 
	C694.880188,85.326401 700.490906,88.361794 701.874939,95.173500 
	C703.276733,102.072342 703.338074,109.274857 703.630066,116.359055 
	C703.918213,123.348610 706.492737,126.213440 713.602783,126.270752 
	C732.429810,126.422516 751.257507,126.496086 770.554810,126.576981 
z"/>
<path fill="white" opacity="1.000000" stroke="none" 
	d="
M846.306091,353.909729 
	C846.277771,354.398895 846.249390,354.888031 846.203735,356.114319 
	C846.236633,357.861298 846.286865,358.871185 846.337036,359.881073 
	C846.297485,360.690765 846.257935,361.500458 846.202393,363.054962 
	C846.237976,364.498016 846.289490,365.196259 846.341003,365.894501 
	C846.292542,366.689056 846.244080,367.483643 846.188538,368.977051 
	C846.226257,370.088531 846.271118,370.501190 846.316040,370.913849 
	C846.268982,376.330902 846.221924,381.747925 846.151489,387.949341 
	C846.117737,389.161743 846.107483,389.589844 846.097168,390.017914 
	C846.097168,390.017914 845.943787,390.209076 845.862427,390.343750 
	C845.781067,390.478394 845.714905,390.717621 845.714905,390.717621 
	C845.714905,390.717621 845.346863,390.891388 844.873413,391.058899 
	C844.075623,391.479584 843.751404,391.732819 843.427124,391.986023 
	C835.583984,394.033020 827.779358,396.244324 819.889587,398.092377 
	C804.123596,401.785248 788.177490,402.354462 772.428162,398.563934 
	C763.153198,396.331665 753.926453,393.328003 745.205994,389.476013 
	C723.955811,380.089417 701.949280,376.687988 679.035217,379.779999 
	C663.267090,381.907776 648.747681,388.186798 634.201904,394.359497 
	C615.542236,402.277924 596.176941,406.137177 575.861755,402.500336 
	C570.195312,401.485931 564.588379,400.139130 558.311157,398.696777 
	C556.788269,398.323700 555.908386,398.198669 555.028442,398.073669 
	C554.541016,397.769897 554.053650,397.466064 553.281982,397.120178 
	C549.570251,395.984955 546.142700,394.891876 542.412048,393.860382 
	C542.108948,393.921967 542.163696,393.875183 542.163696,393.875183 
	C539.383667,392.749054 536.603638,391.622894 533.578003,389.924194 
	C533.268066,358.281830 533.203796,327.212036 533.139526,296.142212 
	C537.767822,294.529327 542.396118,292.916412 548.056946,290.943665 
	C548.056946,294.137482 548.054993,296.072540 548.057190,298.007568 
	C548.083679,321.339508 548.089783,344.671478 548.165649,368.003265 
	C548.174561,370.748627 547.736206,373.872894 551.731262,374.656860 
	C556.145020,375.523010 558.023682,373.947174 558.021912,369.037384 
	C558.012939,344.038818 558.080872,319.039337 557.859131,294.042542 
	C557.822205,289.883484 559.100830,287.776123 563.924744,287.231018 
	C599.826782,280.521545 634.881470,280.989502 669.364380,290.473633 
	C693.807678,297.196442 717.675110,305.992676 742.046326,313.005859 
	C755.539551,316.888763 769.540344,319.007812 783.495117,322.058350 
	C784.244568,322.171448 784.811340,322.148193 785.711609,322.209259 
	C788.079102,322.279449 790.113098,322.265320 792.530518,322.365509 
	C796.248718,322.576843 799.583435,322.673859 803.388062,322.838318 
	C812.245667,322.033325 820.633240,321.160889 829.420532,320.352448 
	C835.266907,319.379669 840.713623,318.342926 846.160278,317.306213 
	C846.190552,318.553375 846.220886,319.800537 846.245972,321.851288 
	C846.278442,323.110748 846.316162,323.566681 846.353882,324.022583 
	C846.301086,326.098053 846.248291,328.173492 846.179321,331.141602 
	C846.210815,339.326050 846.258423,346.617889 846.306091,353.909729 
z"/>
<path fill="white" opacity="1.000000" stroke="none" 
	d="
M614.728271,490.827148 
	C596.377686,489.533722 580.075378,482.976044 565.688721,471.606598 
	C562.830811,469.348083 560.223145,466.772919 557.207764,464.175354 
	C547.847473,453.270416 540.367737,441.406555 535.668945,428.268097 
	C533.201782,421.369507 533.613708,413.441223 532.554810,404.543854 
	C537.980469,406.391144 541.615845,407.628906 545.624146,408.806641 
	C560.947937,412.568146 575.863525,415.930237 591.528381,416.036133 
	C612.002502,416.174530 631.046387,411.067627 649.142151,402.298309 
	C666.243347,394.010956 684.196594,390.867981 702.843567,392.064636 
	C716.463440,392.938690 729.557434,396.532715 741.948792,402.716003 
	C753.308167,408.384338 765.683594,410.909546 778.178345,412.926605 
	C800.117676,416.468262 821.142029,412.143616 842.013550,406.068024 
	C843.089417,405.754852 844.220398,405.631378 845.916809,405.306335 
	C846.663635,416.120483 844.816467,426.219666 840.733459,435.678497 
	C828.102173,464.940399 806.630005,483.753265 774.845154,489.883331 
	C773.867615,490.071869 772.905701,490.341888 771.066162,490.403748 
	C769.368530,490.163300 768.541199,490.031525 767.713867,490.031281 
	C718.155212,490.016754 668.596558,490.006195 619.037903,490.042664 
	C617.601196,490.043732 616.164795,490.554199 614.728271,490.827148 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M792.147034,322.251190 
	C790.113098,322.265320 788.079102,322.279449 785.366516,322.174072 
	C784.229370,322.010376 783.770874,321.966187 783.312378,321.921997 
	C769.540344,319.007812 755.539551,316.888763 742.046326,313.005859 
	C717.675110,305.992676 693.807678,297.196442 669.364380,290.473633 
	C634.881470,280.989502 599.826782,280.521545 564.306274,287.044250 
	C563.313110,283.071625 562.696533,279.144043 562.105713,274.911316 
	C592.143127,269.193573 622.075134,268.496765 652.351685,273.513336 
	C678.529480,277.850769 703.380859,286.264648 728.415588,294.435394 
	C748.110901,300.863556 767.834778,307.424286 788.599915,309.643066 
	C805.152710,311.411804 821.439575,309.519836 837.515869,305.449005 
	C839.772339,304.877625 842.025574,304.293640 844.440796,303.916626 
	C841.405090,307.732605 838.208923,311.347473 834.651367,315.023346 
	C832.858704,315.381226 831.427490,315.678101 830.115906,315.706604 
	C830.624084,314.272949 831.012573,313.107727 831.683167,311.096222 
	C825.505920,311.096222 820.082764,310.985596 814.665649,311.118774 
	C802.599426,311.415375 790.536194,311.835205 778.471680,312.201782 
	C775.426086,312.294312 772.130371,311.707611 769.521851,316.179688 
	C777.409119,318.296234 784.778076,320.273712 792.147034,322.251190 
z"/>
<path fill="#813E3A" opacity="1.000000" stroke="none" 
	d="
M532.987793,296.512177 
	C533.203796,327.212036 533.268066,358.281830 533.296936,389.736572 
	C532.838562,387.528534 532.057129,384.936859 532.048218,382.342529 
	C531.958374,356.144989 531.974121,329.946991 532.032532,303.749298 
	C532.037659,301.459656 532.556091,299.171173 532.987793,296.512177 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M542.115112,393.886719 
	C542.049255,395.828064 542.283386,397.882141 541.809021,399.756958 
	C541.422791,401.283875 540.188416,402.596252 539.330017,404.003723 
	C538.849915,402.336334 537.685547,400.490234 538.062622,399.046661 
	C538.536438,397.232330 540.272034,395.747559 541.813416,393.997864 
	C542.163696,393.875183 542.108948,393.921967 542.115112,393.886719 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M746.148438,124.837662 
	C746.321106,124.594116 746.622864,124.375511 746.924622,124.156906 
	C747.015259,124.351219 747.105896,124.545532 747.196594,124.739838 
	C746.890259,124.780762 746.583862,124.821686 746.148438,124.837662 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M517.843872,410.456909 
	C517.963196,410.404114 518.063049,410.405884 518.162842,410.407654 
	C518.050049,410.442261 517.937195,410.476868 517.843872,410.456909 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M558.161438,275.202637 
	C558.484436,275.176422 558.904236,275.282928 559.651855,275.392975 
	C559.405823,275.376099 558.832092,275.355713 558.161438,275.202637 
z"/>
<path fill="#800000" opacity="1.000000" stroke="none" 
	d="
M615.214478,490.862885 
	C616.164795,490.554199 617.601196,490.043732 619.037903,490.042664 
	C668.596558,490.006195 718.155212,490.016754 767.713867,490.031281 
	C768.541199,490.031525 769.368530,490.163300 770.642334,490.421021 
	C756.770630,490.726929 742.452454,490.935211 728.134155,490.946625 
	C690.656372,490.976501 653.178528,490.920410 615.214478,490.862885 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M555.331299,398.185699 
	C555.908386,398.198669 556.788269,398.323700 557.898804,398.698608 
	C557.297607,398.731598 556.465820,398.514648 555.331299,398.185699 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.443359,370.757538 
	C846.271118,370.501190 846.226257,370.088531 846.253174,369.370911 
	C846.500671,369.251495 846.666443,369.445618 846.939209,369.799896 
	C846.899841,370.172058 846.738037,370.388641 846.443359,370.757538 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.152344,389.830750 
	C846.107483,389.589844 846.117737,389.161743 846.200195,388.421814 
	C846.250732,388.621185 846.229065,389.132416 846.152344,389.830750 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M845.734985,390.666260 
	C845.714905,390.717621 845.781067,390.478394 845.844727,390.464966 
	C845.908325,390.451569 845.755066,390.614868 845.734985,390.666260 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M843.696289,391.849915 
	C843.751404,391.732819 844.075623,391.479584 844.712036,391.182831 
	C844.671265,391.330780 844.318420,391.522278 843.696289,391.849915 
z"/>
<path fill="white" opacity="1.000000" stroke="none" 
	d="
M719.000122,505.881775 
	C721.204956,506.149139 723.895264,505.727905 723.805542,510.037659 
	C723.825989,512.177734 723.837158,513.543213 723.848328,514.908691 
	C723.848328,514.908691 723.388794,514.975098 722.707153,514.941772 
	C701.701111,514.811951 681.376770,514.715515 661.052368,514.619080 
	C661.003784,513.943909 660.955200,513.268677 660.913818,511.858551 
	C660.898560,509.768127 660.876160,508.412628 660.853760,507.057129 
	C664.611084,506.714142 668.368469,506.371155 672.900146,506.019531 
	C674.103882,505.974640 674.533264,505.938354 674.962646,505.902100 
	C688.664551,505.937744 702.366394,505.973358 716.865967,505.999847 
	C718.109192,505.954376 718.554626,505.918091 719.000122,505.881775 
z"/>
<path fill="white" opacity="1.000000" stroke="none" 
	d="
M708.551270,530.693665 
	C709.227051,538.983093 709.227112,538.968323 701.265564,538.931763 
	C694.113281,538.898865 686.952637,539.074463 679.816223,538.731689 
	C678.550049,538.670959 676.415222,536.537048 676.396179,535.333191 
	C676.366577,533.465332 677.780273,529.955627 678.633606,529.939941 
	C688.539185,529.757751 698.454529,530.101562 708.551270,530.693665 
z"/>
<path fill="transparent" opacity="1.000000" stroke="none" 
	d="
M690.341675,554.359558 
	C693.107117,554.747986 697.124512,554.634216 697.444336,555.666321 
	C698.374817,558.668884 699.115784,563.820923 697.552429,565.014526 
	C695.220215,566.795166 690.493225,566.931458 687.461243,565.857849 
	C684.761536,564.901978 686.912720,555.694641 690.341675,554.359558 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M707.946960,516.113098 
	C705.644470,516.854980 703.319092,518.285645 701.043884,518.209717 
	C694.221924,517.982117 687.419678,517.165894 680.792725,516.329224 
	C689.966125,516.090393 698.956543,516.101746 707.946960,516.113098 
z"/>
<path fill="#813E3A" opacity="1.000000" stroke="none" 
	d="
M708.416077,516.092773 
	C698.956543,516.101746 689.966125,516.090393 680.512451,516.094727 
	C673.963196,515.738953 667.877197,515.367432 661.421814,514.807495 
	C681.376770,514.715515 701.701111,514.811951 722.481384,514.995850 
	C718.253235,515.412964 713.569214,515.742737 708.416077,516.092773 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M724.117615,514.923340 
	C723.837158,513.543213 723.825989,512.177734 723.886047,510.408203 
	C727.382202,512.414246 727.447632,513.165527 724.117615,514.923340 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M685.285889,662.743164 
	C685.221924,662.478210 685.257141,662.242432 685.292297,662.006592 
	C685.426025,662.045349 685.559814,662.084106 685.693542,662.122864 
	C685.590698,662.339355 685.487854,662.555847 685.285889,662.743164 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M660.754028,507.353485 
	C660.876160,508.412628 660.898560,509.768127 660.855591,511.525024 
	C660.744934,510.500916 660.699646,509.075348 660.754028,507.353485 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M718.875977,505.762756 
	C718.554626,505.918091 718.109192,505.954376 717.331299,505.939697 
	C717.583252,505.807007 718.167542,505.725342 718.875977,505.762756 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M674.772095,505.857849 
	C674.533264,505.938354 674.103882,505.974640 673.354736,505.957336 
	C673.550537,505.873718 674.066040,505.843689 674.772095,505.857849 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M835.012756,314.962341 
	C838.208923,311.347473 841.405090,307.732605 844.869873,303.878357 
	C845.430969,300.563263 845.911682,297.491669 845.978516,294.411072 
	C846.140442,286.943726 846.109741,279.472198 846.232788,271.546783 
	C846.821594,278.538879 847.104553,286.012939 847.957336,293.421478 
	C848.310364,296.489105 850.139099,299.360901 850.804443,302.428528 
	C851.193604,304.223022 851.044983,306.402008 850.364990,308.097961 
	C849.334351,310.668396 847.630493,312.968903 845.716553,315.707336 
	C841.817810,315.674530 838.415283,315.318420 835.012756,314.962341 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M834.651367,315.023315 
	C838.415283,315.318420 841.817810,315.674530 845.613831,316.017761 
	C846.044189,316.293732 846.080383,316.582642 846.138184,317.088928 
	C840.713623,318.342926 835.266907,319.379669 829.417603,319.996216 
	C829.006775,318.386169 828.998535,317.196259 829.241699,315.998627 
	C829.660828,315.985596 829.828491,315.980286 829.996216,315.975006 
	C831.427490,315.678101 832.858704,315.381226 834.651367,315.023315 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.265747,257.903320 
	C846.230469,247.939011 846.195251,237.974701 846.238037,227.556305 
	C846.575317,234.766144 846.834473,242.430099 847.081421,250.949829 
	C846.801331,253.838196 846.533508,255.870758 846.265747,257.903320 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.412354,353.521332 
	C846.258423,346.617889 846.210815,339.326050 846.244019,331.583374 
	C846.389465,338.465973 846.454102,345.799469 846.412354,353.521332 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.219055,258.266479 
	C846.533508,255.870758 846.801331,253.838196 847.087524,251.409409 
	C847.458557,254.416931 847.811218,257.820679 847.902710,261.426453 
	C847.189148,261.114044 846.736877,260.599670 846.284668,260.085266 
	C846.247192,259.600067 846.209839,259.114868 846.219055,258.266479 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.211792,260.511993 
	C846.736877,260.599670 847.189148,261.114044 847.812988,261.820190 
	C847.563354,263.506104 847.142212,265.000336 846.514465,266.748108 
	C846.251587,264.980682 846.195190,262.959717 846.211792,260.511993 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.530334,323.951263 
	C846.316162,323.566681 846.278442,323.110748 846.301331,322.315857 
	C846.476868,322.611237 846.591858,323.245575 846.530334,323.951263 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.417114,359.617615 
	C846.286865,358.871185 846.236633,357.861298 846.260986,356.478180 
	C846.389465,357.188019 846.443298,358.271118 846.417114,359.617615 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M846.405884,365.666962 
	C846.289490,365.196259 846.237976,364.498016 846.265320,363.456909 
	C846.386414,363.889160 846.428589,364.664276 846.405884,365.666962 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M848.908203,166.997818 
	C849.251831,166.767197 849.603271,166.680893 849.954773,166.594574 
	C849.967407,166.880219 849.980103,167.165848 849.992737,167.451492 
	C849.633850,167.348373 849.274902,167.245239 848.908203,166.997818 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M830.115906,315.706604 
	C829.828491,315.980286 829.660828,315.985596 828.883850,316.093628 
	C825.536194,317.323608 822.883545,318.945496 820.035522,319.438293 
	C817.216675,319.926025 813.361694,320.372620 811.438599,318.903442 
	C806.838989,315.389465 802.529297,318.065857 798.184082,317.211487 
	C798.044067,317.638092 797.903992,318.064697 797.763916,318.491302 
	C799.481995,319.917847 801.200073,321.344391 802.918152,322.770905 
	C799.583435,322.673859 796.248718,322.576843 792.530518,322.365509 
	C784.778076,320.273712 777.409119,318.296234 769.521851,316.179688 
	C772.130371,311.707611 775.426086,312.294312 778.471680,312.201782 
	C790.536194,311.835205 802.599426,311.415375 814.665649,311.118774 
	C820.082764,310.985596 825.505920,311.096222 831.683167,311.096222 
	C831.012573,313.107727 830.624084,314.272949 830.115906,315.706604 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M803.388062,322.838318 
	C801.200073,321.344391 799.481995,319.917847 797.763916,318.491302 
	C797.903992,318.064697 798.044067,317.638092 798.184082,317.211487 
	C802.529297,318.065857 806.838989,315.389465 811.438599,318.903442 
	C813.361694,320.372620 817.216675,319.926025 820.035522,319.438293 
	C822.883545,318.945496 825.536194,317.323608 828.632324,316.101379 
	C828.998535,317.196259 829.006775,318.386169 829.017944,319.932251 
	C820.633240,321.160889 812.245667,322.033325 803.388062,322.838318 
z"/>
<path fill="red" opacity="1.000000" stroke="none" 
	d="
M783.495117,322.058350 
	C783.770874,321.966187 784.229370,322.010376 785.032959,322.089783 
	C784.811340,322.148193 784.244568,322.171448 783.495117,322.058350 
z"/>
</svg>
                      </div>

                      <div className="flex-grow">
                        <h3 className="text-2xl md:text-3xl font-bold mb-4 text-gray-900">
                          {area.title}
                        </h3>
                        <p className="text-gray-600 leading-relaxed text-lg mb-6">
                          {area.extendedDescription}
                        </p>
                      </div>

                      <div className="mt-auto space-y-6 z-10">
                        <div className="hidden md:grid grid-cols-2 gap-4">
                          {area.stats?.map((stat) => (
                            <div
                              key={stat.label}
                              className="text-center p-4 bg-red-50/50 rounded-xl border border-red-200/50"
                            >
                              <div className="text-2xl font-bold text-red-600 mb-1">
                                {stat.value}
                              </div>
                              <div className="text-sm text-gray-600">
                                {stat.label}
                              </div>
                            </div>
                          ))}
                        </div>

                        <PreloadLink
                          href="/camp"
                          priority="high"
                          className="hidden md:inline-flex items-center justify-center w-full px-6 py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg font-semibold transition-colors duration-200 group"
                        >
                          <span>Join Our Next Camp</span>
                          <ArrowRight className="w-4 h-4 ml-2 transform group-hover:translate-x-1 transition-transform duration-200" />
                        </PreloadLink>
                      </div>
                    </>
                  ) : area.title === "Cancer Awareness" ? (
                    <>
                      {/* Cancer Ribbon SVG positioned to the right */}
                      <div className="absolute hidden md:block bottom-20 right-24 scale-400 opacity-50 pointer-events-none">
                        <svg
                          width="80"
                          height="44"
                          viewBox="0 0 489 267"
                          fill="transparent"
                          xmlns="http://www.w3.org/2000/svg"
                          className="text-gray-800"
                          strokeWidth={5}
                        >
                          <path
                            d="M0 0 C161.37 0 322.74 0 489 0 C489 88.11 489 176.22 489 267 C327.63 267 166.26 267 0 267 C0 178.89 0 90.78 0 0 Z "
                            fill="transparent"
                          />
                          <path
                            d="M0 0 C8.8178217 8.97847027 11.88372616 25.97400988 13 38 C13.16048828 39.50046875 13.16048828 39.50046875 13.32421875 41.03125 C13.91070178 51.35335127 10.42541246 60.43012097 7 70 C6.60554688 71.15757813 6.21109375 72.31515625 5.8046875 73.5078125 C3.18184933 80.82608125 -0.27458202 87.53920598 -4.1418457 94.26611328 C-4.5255835 94.95302246 -4.90932129 95.63993164 -5.3046875 96.34765625 C-5.8303833 97.26043335 -5.8303833 97.26043335 -6.36669922 98.19165039 C-7.18593728 100.53093192 -6.85459567 101.69954434 -6 104 C-4.65413709 105.9670304 -3.22377013 107.87688571 -1.75 109.75 C-1.30962402 110.31146729 -0.86924805 110.87293457 -0.41552734 111.45141602 C1.04732889 113.30827429 2.52203897 115.15514577 4 117 C4.51208008 117.64114746 5.02416016 118.28229492 5.55175781 118.94287109 C9.32867979 123.66110748 13.15102575 128.34041365 17 133 C17.52416504 133.63679687 18.04833008 134.27359375 18.58837891 134.9296875 C33.663667 153.16950892 54.99244076 172.75222027 79 178 C82.65224305 177.6679779 84.32250592 176.0289195 86.8125 173.4375 C87.51117188 172.71175781 88.20984375 171.98601562 88.9296875 171.23828125 C91.38860445 168.57986727 93.78734302 165.87882666 96.15234375 163.13671875 C99.70244217 159.03121382 103.33647254 155.00432072 107 151 C107.58652344 150.34644531 108.17304688 149.69289062 108.77734375 149.01953125 C114.21780898 143.22063537 121.6887515 137.32690849 129.87573242 136.82299805 C132.97615761 136.76839854 136.07613413 136.72342477 139.17700195 136.70483398 C141.16315908 136.68770986 143.14902687 136.64382424 145.13476562 136.59960938 C155.29395892 136.53253497 161.46720307 138.02387055 168.71630859 145.16186523 C169.22242676 145.68594971 169.72854492 146.21003418 170.25 146.75 C170.79865723 147.3056665 171.34731445 147.86133301 171.91259766 148.43383789 C176.69189791 153.40548753 180.826888 158.79708669 184.77832031 164.44238281 C188.49617616 169.67600028 192.65070176 175.02312135 199 176.875 C204.9005458 175.15400747 207.91560676 169.81898221 210.9375 164.75 C213.39645311 156.07134197 212.70458592 148.9552337 208.38671875 141.05859375 C207.08488357 138.96690074 207.08488357 138.96690074 205.33203125 137.41015625 C204 136 204 136 204 133 C222.37593985 132.45864662 222.37593985 132.45864662 230 135 C235.54092966 140.75293044 236.42077444 145.28629389 236.35913086 153.14916992 C236.07074686 163.16538565 232.34186451 169.6322268 225.50390625 176.796875 C213.65112251 187.22584541 197.81162876 185.69939485 183 185 C170.56093548 183.552456 163.66835323 177.41557295 156 168 C155.195625 167.05125 154.39125 166.1025 153.5625 165.125 C152 163 152 163 152 161 C151.34 161 150.68 161 150 161 C148.2734375 159.03125 148.2734375 159.03125 146.375 156.5 C145.74335938 155.6646875 145.11171875 154.829375 144.4609375 153.96875 C143.73777344 152.99421875 143.73777344 152.99421875 143 152 C138.16615326 153.43408383 135.32767396 156.35818123 131.95703125 159.92578125 C130.78868627 161.12722042 129.62005723 162.32838343 128.45117188 163.52929688 C126.63441231 165.41400466 124.82197396 167.30256527 123.01538086 169.19702148 C113.17886603 179.47801802 105.08411759 185.9384114 90.6875 188.3125 C89.72054199 188.47637207 88.75358398 188.64024414 87.75732422 188.80908203 C70.09957693 191.47876194 48.77836312 193.36751332 32.625 184.4375 C31.98216064 184.08743896 31.33932129 183.73737793 30.67700195 183.37670898 C24.53458485 179.9229846 19.24244173 175.69984502 14 171 C13.10152344 170.20980469 12.20304687 169.41960937 11.27734375 168.60546875 C-0.17618593 158.43392472 -10.78238808 147.38819508 -19.87768555 135.05078125 C-22.01926368 132.05749651 -22.01926368 132.05749651 -25 130 C-25.23460937 130.67804688 -25.46921875 131.35609375 -25.7109375 132.0546875 C-27.30034859 135.68625101 -29.40339642 138.86078163 -31.625 142.125 C-32.29486938 143.11632935 -32.29486938 143.11632935 -32.97827148 144.12768555 C-39.44087505 153.64588273 -46.09221553 162.61774846 -54 171 C-54.87785156 171.95712891 -54.87785156 171.95712891 -55.7734375 172.93359375 C-60.94178181 178.38098012 -66.83201319 183.38694962 -73.88671875 186.1171875 C-77.47197304 185.98223439 -77.89755056 185.55676172 -80.359375 183.140625 C-81.50898676 181.86091861 -82.63870417 180.56311737 -83.75 179.25 C-84.32621094 178.60289062 -84.90242188 177.95578125 -85.49609375 177.2890625 C-92 169.92100087 -92 169.92100087 -92 166 C-89.8046875 164.1328125 -89.8046875 164.1328125 -86.875 162.125 C-85.86566406 161.4134375 -84.85632813 160.701875 -83.81640625 159.96875 C-82.42228516 158.99421875 -82.42228516 158.99421875 -81 158 C-75.28937905 153.74502753 -71.26983949 148.63913285 -67 143 C-66.36288086 142.15937012 -66.36288086 142.15937012 -65.71289062 141.30175781 C-50.68196669 123.74023911 -50.68196669 123.74023911 -43.20703125 103.62109375 C-44.14360506 100.52532515 -45.52616799 98.32483927 -47.3125 95.625 C-51.35421455 89.31184569 -54.89260434 82.76028334 -58.375 76.125 C-58.89876221 75.13838379 -59.42252441 74.15176758 -59.9621582 73.13525391 C-68.04474742 57.61784121 -68.61714548 38.34959392 -64.3125 21.375 C-63.60214305 19.22902655 -62.83669507 17.09994057 -62 15 C-61.62617187 14.030625 -61.25234375 13.06125 -60.8671875 12.0625 C-57.78456155 5.03982895 -54.29787205 2.03795811 -47.50390625 -1.18359375 C-34.43066645 -6.20107888 -12.32178914 -7.587211 0 0 Z "
                            fill="white"
                            stroke="purple"
                            transform="translate(190,47)"
                          />
                        </svg>
                      </div>

                      <div className="flex-grow">
                        <h3 className="text-xl font-bold mb-4 text-gray-900">
                          {area.title}
                        </h3>
                        <p className="text-gray-600 leading-relaxed mb-4">
                          {area.extendedDescription || area.description}
                        </p>
                      </div>
                    </>
                  ) : (
                    <>
                      <h3 className="text-xl font-bold mb-4 text-gray-900">
                        {area.title}
                      </h3>
                      <p className="text-gray-600 leading-relaxed">
                        {area.description}
                      </p>
                    </>
                  )}
                </SpotlightCard>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* Upcoming Events Section */}
      <motion.section
        initial="hidden"
        animate={isEventsVisible ? "visible" : "hidden"}
        variants={containerVariants}
        className="py-24 bg-white"
      >
        <div className="container mx-auto px-4">
          <motion.div
            variants={itemVariants}
            className="text-center mb-16 max-w-3xl mx-auto"
          >
            <h2 className="text-black font-bold text-3xl sm:text-4xl md:text-5xl lg:text-6xl tracking-tight mb-6 sm:mb-7 md:mb-8">
              Events & Camps
            </h2>
            <p className="text-xl text-gray-600">
              Discover our recent activities and join us in upcoming events to
              be part of our mission to serve the community.
            </p>
          </motion.div>

          {loading ? (
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {[1, 2, 3].map((i) => (
                <motion.div
                  key={i}
                  variants={itemVariants}
                  className="animate-pulse bg-white rounded-xl shadow-md overflow-hidden border border-gray-200"
                >
                  <div className="h-64 bg-gray-200" />
                  <div className="p-8 space-y-4">
                    <div className="h-6 bg-gray-200 rounded w-3/4" />
                    <div className="h-4 bg-gray-200 rounded w-1/2" />
                    <div className="h-4 bg-gray-200 rounded w-full" />
                    <div className="h-10 bg-gray-200 rounded" />
                  </div>
                </motion.div>
              ))}
            </div>
          ) : error ? (
            <motion.div variants={itemVariants} className="text-center py-16">
              <div className="max-w-md mx-auto">
                <div className="w-24 h-24 mx-auto mb-6 rounded-full bg-red-100 flex items-center justify-center">
                  <Calendar className="w-12 h-12 text-red-400" />
                </div>
                <h3 className="text-2xl font-semibold mb-4 text-gray-900">
                  Failed to Load Events
                </h3>
                <p className="text-gray-600 mb-6">{error}</p>
                <button
                  onClick={() => window.location.reload()}
                  className="inline-flex items-center justify-center px-6 py-3 bg-red-600 text-white rounded-lg font-semibold hover:bg-red-700 transition-colors duration-200"
                >
                  Refresh Page
                </button>
              </div>
            </motion.div>
          ) : (
            (() => {
              // Combine and prioritize upcoming events first, then past events
              const allEvents = [...upcomingEvents, ...pastEvents].slice(0, 3);

              return allEvents.length > 0 ? (
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  {allEvents.map((event) => (
                    <motion.div key={event._id} variants={itemVariants}>
                      <EventCard
                        event={event}
                        variant={
                          upcomingEvents.some((e) => e._id === event._id)
                            ? "upcoming"
                            : "past"
                        }
                      />
                    </motion.div>
                  ))}
                </div>
              ) : (
                <motion.div
                  variants={itemVariants}
                  className="text-center py-16"
                >
                  <div className="max-w-md mx-auto">
                    <div className="w-24 h-24 mx-auto mb-6 rounded-full bg-gray-100 flex items-center justify-center">
                      <Calendar className="w-12 h-12 text-gray-400" />
                    </div>
                    <h3 className="text-2xl font-semibold mb-4 text-gray-900">
                      No Events Available
                    </h3>
                    <p className="text-gray-600 mb-6">
                      We don&apos;t have any events to display at the moment.
                      Please check back soon for new announcements.
                    </p>
                  </div>
                </motion.div>
              );
            })()
          )}

          <motion.div variants={itemVariants} className="text-center mt-16">
            <PreloadLink
              href="/camp"
              priority="high"
              className="inline-flex items-center justify-center px-8 py-4 bg-red-900 text-white rounded-lg font-semibold shadow-md hover:bg-red-800 transition-all duration-300 group"
            >
              <span>View All Events</span>
              <ArrowRight className="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" />
            </PreloadLink>
          </motion.div>
        </div>
      </motion.section>

      {/* Impact Statistics */}
      <motion.section
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, margin: "-100px" }}
        variants={containerVariants}
        className="py-24 text-white relative overflow-hidden"
      >
        {/* Background Image */}
        <div className="absolute inset-0 z-0">
          <img
            src="/rudhirsetu-bg.webp"
            alt="Impact Background"
            className="w-full h-full object-cover"
          />
          <div className="absolute inset-0 bg-black/30"></div>
        </div>

        <div className="container mx-auto px-4 relative z-10">
          <motion.div
            variants={itemVariants}
            className="text-center mb-16 max-w-3xl mx-auto"
          >
            <span className="px-4 py-1.5 bg-white/10 text-white text-sm font-medium rounded-full mb-6 inline-flex items-center">
              <Activity className="w-4 h-4 mr-2" />
              Our Impact
            </span>
            <h2 className="text-4xl font-bold mb-6">
              The Change We&apos;re Making
            </h2>
            <p className="text-xl text-white/90">
              With your support, we&apos;ve achieved significant milestones in
              our mission to transform lives
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {impactStats.map((stat) => (
              <motion.div
                key={stat.label}
                variants={itemVariants}
                whileHover={{ y: -8, transition: { duration: 0.3 } }}
              >
                <div className="bg-white/10 rounded-xl p-6 border border-white/10 hover:border-white/30 transition-all h-full backdrop-blur-sm">
                  <h3 className="text-4xl sm:text-5xl font-bold mb-3 text-white">
                    <CountUp
                      from={0}
                      to={stat.value}
                      duration={stat.duration}
                      delay={0}
                      separator=","
                      className="text-white"
                    />
                    {stat.suffix}
                  </h3>
                  <div className="text-xl font-semibold mb-1 text-white">
                    {stat.label}
                  </div>
                  <div className="text-white/70">{stat.subtext}</div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* Featured Gallery Showcase */}
      {featuredImages.length > 0 && (
        <motion.section
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, margin: "-100px" }}
          variants={containerVariants}
          className="py-24 bg-gray-50"
        >
          <div className="container mx-auto px-4">
            <motion.div
              variants={itemVariants}
              className="text-center mb-16 max-w-3xl mx-auto"
            >
              <span className="px-4 py-1.5 bg-red-100 text-red-900 text-sm font-medium rounded-full mb-6 inline-flex items-center">
                <Image className="w-4 h-4 mr-2" />
                Featured Gallery
              </span>
              <h2 className="text-4xl font-bold mb-6 text-gray-900">
                Moments That Matter
              </h2>
              <p className="text-xl text-gray-600">
                Take a glimpse at the remarkable moments we&apos;ve captured
                during our journey of service
              </p>
            </motion.div>

            <motion.div variants={itemVariants} className="mb-16">
              <FeaturedCarousel
                featuredImages={featuredImages}
                onImageClick={(image, index) => {
                  setSelectedImage(image);
                  setSelectedImageIndex(index);
                }}
                aspectRatio="md:aspect-[21/9] aspect-[7/9]"
              />
            </motion.div>

            <motion.div variants={itemVariants} className="text-center">
              <PreloadLink
                href="/gallery"
                priority="medium"
                className="inline-flex items-center justify-center px-8 py-4 bg-red-900 text-white rounded-lg font-semibold shadow-md hover:bg-red-800 transition-all duration-300 group"
              >
                <span>View Full Gallery</span>
                <ArrowRight className="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" />
              </PreloadLink>
            </motion.div>
          </div>
        </motion.section>
      )}

      {/* Call to Action - EventCard Style */}
      <motion.section
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, margin: "-100px" }}
        variants={containerVariants}
        className="container mx-auto px-4 py-20 md:py-24"
      >
        <motion.div variants={fadeInUpVariants} className="max-w-7xl mx-auto">
          <div className="bg-white rounded-2xl border border-gray-200/40 shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden">
            <div className="flex flex-col lg:flex-row">
              {/* Content Section */}
              <div className="flex-1 flex flex-col">
                {/* Title Section */}
                <div className="p-8 md:p-10">
                  <h2 className="text-3xl md:text-4xl font-bold text-gray-900 hover:text-[#9B2C2C] transition-colors duration-300">
                    Join Us in Making a Difference!
                  </h2>
                </div>

                {/* Divider */}
                <div className="mx-8 md:mx-10">
                  <div className="h-px bg-gradient-to-r from-transparent via-gray-200 to-transparent"></div>
                </div>

                {/* Contact Details Section */}
                <div className="px-8 md:px-10 py-5 space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {contactSettings?.phone && (
                      <div className="flex items-center text-gray-700 p-6 rounded-lg border border-gray-100 bg-gray-50/50">
                        <Phone className="min-w-8 min-h-8 mr-4 text-[#9B2C2C]" />
                        <span className="text-lg font-medium">
                          {contactSettings.phone}
                        </span>
                      </div>
                    )}
                    {contactSettings?.email && (
                      <div className="flex items-center text-gray-700 p-6 rounded-lg border border-gray-100 bg-gray-50/50">
                        <Mail className="min-w-8 min-h-8 mr-4 text-[#9B2C2C]" />
                        <span className="text-lg font-medium">
                          {contactSettings.email}
                        </span>
                      </div>
                    )}
                  </div>

                  {/* Address Row */}
                  {contactSettings?.address && (
                    <div className="flex items-center text-gray-700 p-6 rounded-lg border border-gray-100 bg-gray-50/50">
                      <MapPin className="min-w-8 min-h-8 mr-4 text-[#9B2C2C]" />
                      <span className="text-lg font-medium">
                        {contactSettings.address}
                      </span>
                    </div>
                  )}
                </div>

                {/* Divider */}
                <div className="mx-8 md:mx-10">
                  <div className="h-px bg-gradient-to-r from-transparent via-gray-200 to-transparent"></div>
                </div>

                {/* Description Section */}
                <div className="px-8 md:px-10 py-5">
                  <div className="text-gray-600 p-4 rounded-lg border border-gray-100 bg-gray-50/30">
                    <p className="text-base leading-relaxed">
                      Whether you want to donate, volunteer, or partner with us,
                      your support can help transform lives and empower
                      communities. Join our mission to serve those in need.
                    </p>
                  </div>
                </div>

                {/* Divider */}
                <div className="mx-8 md:mx-10 mt-auto">
                  <div className="h-px bg-gradient-to-r from-transparent via-gray-200 to-transparent"></div>
                </div>

                {/* Action Buttons Section */}
                <div className="p-8 md:p-10">
                  <div className="flex flex-col sm:flex-row gap-4">
                    <PreloadLink
                      href="/contact"
                      priority="high"
                      className="flex-1 inline-flex items-center justify-center px-6 py-4 bg-gradient-to-r from-[#9B2C2C] to-red-600 text-white font-medium rounded-xl transition-all duration-300 shadow-md hover:shadow-lg text-base border border-red-700/20"
                    >
                      <span>Contact Us</span>
                      <ExternalLink className="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" />
                    </PreloadLink>
                    <PreloadLink
                      href="/donations"
                      priority="high"
                      className="flex-1 inline-flex items-center justify-center px-6 py-4 bg-gray-700 text-white hover:bg-gray-600 font-medium rounded-xl transition-all duration-300 shadow-md hover:shadow-lg text-base border border-gray-600"
                    >
                      <span>Donate Now</span>
                      <Heart className="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-300" />
                    </PreloadLink>
                  </div>
                </div>
              </div>

              {/* Google Map Section */}
              <div className="lg:w-2/5 bg-gray-100">
                <div className="h-full min-h-[300px] lg:min-h-full">
                  {contactSettings?.googleMapsUrl ? (
                    <div className="relative w-full h-full lg:h-full">
                      {/* Mobile: aspect ratio container, Desktop: full height */}
                      <div className="lg:absolute lg:inset-0 relative w-full h-0 pb-[100%] lg:h-full lg:pb-0">
                        <iframe
                          src={contactSettings.googleMapsUrl}
                          className="absolute top-0 left-0 w-full h-full border-0"
                          allowFullScreen
                          loading="lazy"
                          referrerPolicy="no-referrer-when-downgrade"
                          title="Rudhirsetu Location"
                        />
                      </div>
                    </div>
                  ) : (
                    <div className="w-full h-full flex items-center justify-center">
                      <div className="text-center p-8">
                        <MapPin className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                        <p className="text-gray-500">Map loading...</p>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        </motion.div>
      </motion.section>

      {/* Lightbox */}
      {selectedImage && (
        <ImageLightbox
          selectedImage={selectedImage}
          images={featuredImages}
          selectedIndex={selectedImageIndex}
          onClose={() => {
            setSelectedImage(null);
          }}
          onPrev={() => {
            const newIndex =
              (selectedImageIndex - 1 + featuredImages.length) %
              featuredImages.length;
            setSelectedImage(featuredImages[newIndex]);
            setSelectedImageIndex(newIndex);
          }}
          onNext={() => {
            const newIndex = (selectedImageIndex + 1) % featuredImages.length;
            setSelectedImage(featuredImages[newIndex]);
            setSelectedImageIndex(newIndex);
          }}
        />
      )}
    </div>
  );
};

export default Home;
